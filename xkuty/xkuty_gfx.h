#ifndef XCUTY_GFX_H
#define XCUTY_GFX_H


const static unsigned int _bmp_mi [] = 
{
0x0, 0x0, 0x1000, 0x0, 
0x361000, 0x491000, 0x491000, 0x491000, 
0x0, 0x0
};
const static unsigned int _bmp_km [] = 
{
0x0, 0x48000000, 0x50d80000, 0x61240000, 
0x51240000, 0x49240000, 0x0
};
const static unsigned int _bmp_kmh [] = 
{
0x4000, 0x24004000, 0x286c7000, 0x30924800, 
0x28924800, 0x24924800, 0x0
};
const static unsigned int _bmp_mph [] = 
{
0x0, 0x8000, 0x8000, 0x3638e000, 
0x49249000, 0x49249000, 0x49389000, 0x200000, 
0x200000, 0x0
};

const static unsigned int _bmp_battery [] = 
{
0x0, 0x0, 0x1fff000, 0x1fff000, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x0, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x0, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x0, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x3fffff80, 0x3fffff80, 0x3fffff80, 
0x3fffff80, 0x0, 0x0
};
const static unsigned int _bmp_battery_empty [] = 
{ 
0x0, 0x0, 0x1fff000, 0x1803000, 
0x3f803f80, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x3fffff80, 
0x0, 0x3fffff80, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x3fffff80, 0x0, 0x3fffff80, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x3fffff80, 0x0, 
0x3fffff80, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x30000180, 
0x30000180, 0x30000180, 0x30000180, 0x3fffff80, 
0x3fffff80, 0x0, 0x0
};

const static unsigned int _bmp_lock []  = 
{
0x0, 0x3ffffc00, 0x40000200, 0x40000200, 
0x40000200, 0x4f00f200, 0x4f80f200, 0x4fc0f200, 
0x4fe0f200, 0x4ff0f200, 0x4ff8f200, 0x4ffcf200, 
0x4f7ef200, 0x4f3ff200, 0x4f1ff200, 0x4f0ff200, 
0x4f07f200, 0x4f03f200, 0x4f01f200, 0x4f00f200, 
0x40000200, 0x40000200, 0x40000200, 0x3ffffc00, 
0x0
};

const static unsigned int _bmp_warning []  = 
{
0x0, 0x0, 0x0, 0x180000, 
0x3c0000, 0x660000, 0x420000, 0x990000, 
0x1998000, 0x1188000, 0x318c000, 0x2184000, 
0x6006000, 0x4182000, 0xc183000, 0x8001000, 
0xffff000, 0x0, 0x0
};

const static unsigned int _bmp_fatal_error [] = 
{ 
0x0, 0x3fc0000, 0x600000, 0xffc0000, 
0x58040000, 0x50060000, 0x5002e000, 0x5002a000, 
0x7003a000, 0x70002000, 0x50002000, 0x50002000, 
0x5003a000, 0x5e02a000, 0x386e000, 0xfc0000, 
0x0
};

const static unsigned int _bmp_cruisin [] = 
{
0x0, 0x60000000, 0x70000000, 0x3a000000, 
0x1e3f0000, 0xec4c000, 0x1f042000, 0x3041000, 
0x5802800, 0x8c04400, 0x8600400, 0x83c0400, 
0xf123c00, 0x8120400, 0x80c0400, 0x8000400, 
0x4000800, 0x2001000, 0x0
};

const static unsigned int _bmp_speed_adjust [] = 
{
0x0, 0x0, 0x0, 0x3c000000, 
0x10000000, 0x2000040, 0x46000000, 0x10000000, 
0x2000040, 0x425c70e1, 0xd01e3cb0, 0xe79c58f0, 
0x40668913, 0x303266c9, 0x12326440, 0x38428912, 
0x10204289, 0x2024440, 0x642f9f2, 0x10204288, 
0xe21e4440, 0x42428102, 0x10204288, 0x12224440, 
0x42668913, 0x30326689, 0x12264440, 0x3c5c70e1, 
0xd01e3c88, 0xe39a4470, 0x400000, 0x0, 
0x0, 0x400000, 0x0, 0x0, 
0x400000, 0x0, 0x0, 0x0, 
0x0, 0x0
};

const static unsigned int _bmp_nums_speed [] = 
{ 
0xfffc000, 0x3ffff000, 0x7ffff800, 0x7ffff800, 
0xf8007c00, 0xf0003c00, 0xf0003c00, 0xf0003c00, 
0xf0003c00, 0xf0003c00, 0xf0003c00, 0xf0003c00, 
0xf0003c00, 0xf0003c00, 0xf0003c00, 0xf0003c00, 
0xf8007c00, 0x7ffff800, 0x7ffff800, 0x3ffff000, 
0xfffc000, 0x7fc0000, 0x7fc0000, 0x7fc0000, 
0x7fc0000, 0x3c0000, 0x3c0000, 0x3c0000, 
0x3c0000, 0x3c0000, 0x3c0000, 0x3c0000, 
0x3c0000, 0x3c0000, 0x3c0000, 0x3c0000, 
0x3c0000, 0x3c0000, 0x7ffe000, 0x7ffe000, 
0x7ffe000, 0x7ffe000, 0x3fffc000, 0x3ffff000, 
0x3ffff800, 0x3ffff800, 0x7c00, 0x3c00, 
0x3c00, 0x7c00, 0xffff800, 0x3ffff800, 
0x7ffff000, 0x7fffc000, 0xf8000000, 0xf0000000, 
0xf0000000, 0xf0000000, 0xf0000000, 0xfffff800, 
0xfffff800, 0xfffff800, 0xfffff800, 0x3fff0000, 
0x3fffc000, 0x3fffe000, 0x3fffe000, 0x1f000, 
0xf000, 0xf000, 0x1f000, 0x7ff000, 
0x7fe000, 0x7fe000, 0x7ff000, 0xf800, 
0x7800, 0x7800, 0x7800, 0xf800, 
0x3ffff000, 0x3ffff000, 0x3fffe000, 0x3fff8000, 
0xf001e000, 0xf001e000, 0xf001e000, 0xf001e000, 
0xf001e000, 0xf001e000, 0xf001e000, 0xf001e000, 
0xf001e000, 0xf001e000, 0xf001e000, 0xf001e000, 
0xf801e000, 0xfffffc00, 0x7ffffc00, 0x3ffffc00, 
0x1ffffc00, 0x1e000, 0x1e000, 0x1e000, 
0x1e000, 0xfffff800, 0xfffff800, 0xfffff800, 
0xfffff800, 0xf0000000, 0xf0000000, 0xf0000000, 
0xf8000000, 0x7fff8000, 0x7fffe000, 0x3ffff000, 
0xffff000, 0xf800, 0x7800, 0x7800, 
0x7800, 0xf800, 0x3ffff000, 0x3ffff000, 
0x3fffe000, 0x3fff8000, 0x7fff800, 0x1ffff800, 
0x3ffff800, 0x3ffff800, 0x7c000000, 0x78000000, 
0x78000000, 0x7fffc000, 0x7ffff000, 0x7ffff800, 
0x7ffff800, 0x78007c00, 0x78003c00, 0x78003c00, 
0x78003c00, 0x78003c00, 0x7c007c00, 0x3ffff800, 
0x3ffff800, 0x1ffff000, 0x7ffc000, 0xfffff800, 
0xfffff800, 0xfffff800, 0xfffff800, 0xf000f000, 
0xf001e000, 0x3e000, 0x7c000, 0xf8000, 
0x1f0000, 0x1e0000, 0x3c0000, 0x7c0000, 
0xf80000, 0x1f00000, 0x1e00000, 0x1e00000, 
0x1e00000, 0x1e00000, 0x1e00000, 0x1e00000, 
0x7ff8000, 0x1fffe000, 0x3ffff000, 0x3ffff000, 
0x7c00f800, 0x78007800, 0x78007800, 0x7c00f800, 
0x3ffff000, 0x3ffff000, 0x3ffff000, 0x7ffff800, 
0xfc007c00, 0xf8003c00, 0xf8003c00, 0xf8003c00, 
0xfc007c00, 0x7ffff800, 0x7ffff800, 0x3ffff000, 
0xfffc000, 0xfff8000, 0x3fffe000, 0x7ffff000, 
0x7ffff000, 0xf800f800, 0xf0007800, 0xf0007800, 
0xf0007800, 0xf0007800, 0xf8007800, 0x7ffff800, 
0x7ffff800, 0x3ffff800, 0xffff800, 0x7800, 
0x7800, 0xf800, 0x3ffff000, 0x3ffff000, 
0x3fffe000, 0x3fff8000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x3c00000, 0x3c00000, 
0x3c00000, 0x3c00000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0xfff8000, 0xfff8000, 0xfff8000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0
};

const static unsigned int _bmp_nums_distance [] = 
{ 
0x7f800000, 0xffc00000, 0xc0c00000, 0xc0c00000, 
0xc0c00000, 0xc0c00000, 0xc0c00000, 0xffc00000, 
0x7f800000, 0x3c000000, 0x3c000000, 0xc000000, 
0xc000000, 0xc000000, 0xc000000, 0xc000000, 
0x3f000000, 0x3f000000, 0x7f800000, 0x7fc00000, 
0xc00000, 0x7fc00000, 0xff800000, 0xc0000000, 
0xc0000000, 0xffc00000, 0xffc00000, 0x3f800000, 
0x3fc00000, 0xc00000, 0x7c00000, 0x7c00000, 
0xc00000, 0xc00000, 0x3fc00000, 0x3f800000, 
0xc1800000, 0xc1800000, 0xc1800000, 0xc1800000, 
0xc1800000, 0xffc00000, 0x7fc00000, 0x1800000, 
0x1800000, 0xffc00000, 0xffc00000, 0xc0000000, 
0xff800000, 0x7fc00000, 0xc00000, 0xc00000, 
0xffc00000, 0xff800000, 0x7f800000, 0xff800000, 
0xc0000000, 0xff800000, 0xffc00000, 0xc0c00000, 
0xc0c00000, 0xffc00000, 0x7f800000, 0xffc00000, 
0xffc00000, 0x81c00000, 0x3800000, 0x7000000, 
0xe000000, 0x1c000000, 0x18000000, 0x18000000, 
0x7f800000, 0xffc00000, 0xc0c00000, 0xffc00000, 
0x7f800000, 0xc0c00000, 0xc0c00000, 0xffc00000, 
0x7f800000, 0x7f800000, 0xffc00000, 0xc0c00000, 
0xc0c00000, 0xffc00000, 0x7fc00000, 0xc00000, 
0x7fc00000, 0x7f800000, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x18000000, 0x18000000, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x1e000000, 0x1e000000, 0x0, 0x0
};

static const unsigned int _bmp_adjust_bar_full [] = 
{ 
0xffffffff, 0xffffc000, 0xffffffff, 0xffffc000, 
0x80000000, 0x4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0xbfffffff, 0xffff4000, 
0xbfffffff, 0xffff4000, 0x80000000, 0x4000, 
0xffffffff, 0xffffc000, 0xffffffff, 0xffffc000
};

static const unsigned int _bmp_adjust_bar_empty [] = 
{
0xffffffff, 0xffffc000, 0xffffffff, 0xffffc000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0x80000000, 0x4000, 0x80000000, 0x4000, 
0xffffffff, 0xffffc000, 0xffffffff, 0xffffc000
};

static const unsigned int _xkuty_bw [] = 
{ 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xff00, 0x0, 0x0, 0x0, 
0x7ffe0, 0x0, 0x0, 0x60000000, 
0x7fff0, 0x0, 0x0, 0xf0000000, 
0x3fffc, 0x0, 0x0, 0xf0000000, 
0x61fffe, 0x0, 0x0, 0xf0000000, 
0xf001ff, 0x700e0c, 0x3830061, 0xff1e00f0, 
0x1f8007f, 0x80f81f1e, 0x7c780f3, 0xff9f01f0, 
0x1f8001f, 0x807c3e1e, 0xf8780f3, 0xff8f01e0, 
0x3f0000f, 0xc07c3e1e, 0x1f0780f1, 0xff0f83e0, 
0x7e03c07, 0xe03e7c1e, 0x3e0780f0, 0xf00f83e0, 
0x7e03f07, 0xe01e781e, 0x7c0780f0, 0xf00783c0, 
0x7c31f83, 0xe01ff81e, 0xf80780f0, 0xf007c7c0, 
0xfc38783, 0xf00ff01f, 0xf80780f0, 0xf003c7c0, 
0xf8783c1, 0xf007e01f, 0xfc0780f0, 0xf003ef80, 
0xf8701c1, 0xf00ff01f, 0xfc0780f0, 0xf003ef80, 
0xf8701c1, 0xf00ff01f, 0xfe0780f0, 0xf001ff80, 
0xf8701c1, 0xf01ff81f, 0xbf0781f0, 0xf001ff00, 
0xf8783c1, 0xf03e7c1f, 0x1f87c3f0, 0xf800ff00, 
0xf83c781, 0xf03c3c1e, 0xfc7fff0, 0xfcc0ff00, 
0xfc3ff83, 0xf07c3e1e, 0x7e7fff0, 0xffc0fe00, 
0x7c1ff03, 0xe0fc3f1e, 0x3e3fcf0, 0x7fc07e00, 
0x7e07c07, 0xe0781e0c, 0x1c1f860, 0x3f807e00, 
0x7e00007, 0xe0000000, 0x0, 0x3c00, 
0x3f0000f, 0xc0000000, 0x0, 0x3c00, 
0x3f8001f, 0x80020002, 0x2004120, 0x3c00, 
0x1fe007f, 0x80020002, 0x4020, 0x7800, 
0xff81ff, 0x3a1c77, 0x3a387124, 0x61c0f800, 
0x7ffffe, 0x4a2482, 0x22404928, 0x9207f000, 
0x3ffffc, 0xfa7c82, 0x22404930, 0xf3cfe000, 
0x1ffff0, 0x422082, 0x22404928, 0x804fc000, 
0x7ffe0, 0x399c71, 0xa2387124, 0x73878000, 
0xff00, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0
};

static const unsigned int _xkuty2_bw [] = 
{ 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xff00, 0x0, 0x0, 0x0, 
0x7ffe0, 0x0, 0x0, 0xf0000000, 
0x7fff0, 0x0, 0x0, 0xf0000000, 
0x3fffc, 0x0, 0x0, 0xf0000000, 
0x61fffe, 0x0, 0x0, 0xf0000000, 
0xf001ff, 0x781e1e, 0x3c780f3, 0xff9e00f0, 
0x1f8007f, 0x80781e1e, 0x7c780f3, 0xff9f01f0, 
0x1f8001f, 0x807c3e1e, 0xf8780f3, 0xff8f01e0, 
0x3f0000f, 0xc07c3e1e, 0x1f0780f3, 0xff8f83e0, 
0x7e07c07, 0xe03e7c1e, 0x3e0780f0, 0xf00f83e0, 
0x7e03f07, 0xe01e781e, 0x7c0780f0, 0xf00783c0, 
0x7c31f83, 0xe01ff81e, 0xf80780f0, 0xf007c7c0, 
0xfc38783, 0xf00ff01f, 0xf80780f0, 0xf003c7c0, 
0xf8783c1, 0xf007e01f, 0xfc0780f0, 0xf003ef80, 
0xf8701c1, 0xf00ff01f, 0xfc0780f0, 0xf003ef80, 
0xf8701c1, 0xf00ff01f, 0xfe0780f0, 0xf001ff80, 
0xf8701c1, 0xf01ff81f, 0xbf0781f0, 0xf001ff00, 
0xf8783c1, 0xf03e7c1f, 0x1f87c3f0, 0xf800ff00, 
0xf83c781, 0xf03c3c1e, 0xfc7fff0, 0xfcc0ff00, 
0xfc3ff83, 0xf07c3e1e, 0x7e7fff0, 0xffc0fe00, 
0x7c1ff03, 0xe07c3e1e, 0x3e3fcf0, 0x7fc07e00, 
0x7e07c07, 0xe07c3e1e, 0x1e1f8f0, 0x3fc07e00, 
0x7e00007, 0xe0000000, 0x0, 0x3c00, 
0x3f0000f, 0xc0000000, 0x0, 0x3c00, 
0x3f8001f, 0x80002000, 0x40401048, 0x3c00, 
0x1fe007f, 0x80002000, 0x40001008, 0x7800, 
0xff81ff, 0x3a1ce, 0xe74e1c49, 0x31c0f800, 
0x7ffffe, 0x4a250, 0x4450124a, 0x4a0ff000, 
0x3ffffc, 0xfa7d0, 0x4450124c, 0x7bcfe000, 
0x1ffff0, 0x42210, 0x4450124a, 0x404fc000, 
0x7ffe0, 0x399ce, 0x344e1c49, 0x3b8f8000, 
0xff00, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0
};

static const unsigned int _exos_bw [] = 
{ 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x80, 0x40000000, 
0x0, 0x0, 0x80, 0x40000000, 
0x0, 0x0, 0x80, 0x40000000, 
0xb807, 0x811103c1, 0x60f00e80, 0x5c104000, 
0xc408, 0x41110421, 0x81081180, 0x62088000, 
0x8210, 0x21290811, 0x2042080, 0x41088000, 
0x8210, 0x21290811, 0x2042080, 0x41088000, 
0x8210, 0x20aa0ff1, 0x3fc2080, 0x41050000, 
0x8210, 0x20aa0801, 0x2002080, 0x41050000, 
0x8210, 0x20aa0811, 0x2042080, 0x41050000, 
0xc408, 0x40440421, 0x1081180, 0x62050000, 
0xb807, 0x804403c1, 0xf00e80, 0x5c020000, 
0x8000, 0x0, 0x0, 0x20000, 
0x8000, 0x0, 0x0, 0x40000, 
0x8000, 0x0, 0x0, 0x180000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0xff, 0xffc00003, 0xffff0000, 0x7f800000, 
0x3ff, 0xfff0000f, 0xffffc001, 0xffe00000, 
0x7ff, 0xfffc003f, 0xffffe003, 0xfff80000, 
0xfff, 0xfffe007f, 0xfffff007, 0xfffc0000, 
0x1fff, 0xffff00ff, 0xfffff80f, 0xfffc0000, 
0x3f80, 0x3f81fc, 0x3f81fc1f, 0xc0780000, 
0x7e00, 0x1fc3f8, 0x7f00fe3f, 0x80300000, 
0x7c00, 0xfe7f0, 0x7e007e3f, 0x0, 
0xf800, 0x7ffe0, 0xfc003f7e, 0x0, 
0xf800, 0x3ffc0, 0xf8001f7e, 0x0, 
0xffff, 0xfe01ff80, 0xf8001f7f, 0xffff8000, 
0xffff, 0xfc00ff00, 0xf8001f7f, 0xffff8000, 
0xffff, 0xf800ff00, 0xf8001f7f, 0xffff8000, 
0xffff, 0xf001ff80, 0xf8001f3f, 0xffff8000, 
0xf800, 0x3ffc0, 0xf8001f00, 0x1f8000, 
0xf800, 0x7ffe0, 0xfc003f00, 0x1f8000, 
0x7c00, 0xfe7f0, 0x7e007e00, 0x1f8000, 
0x7e00, 0x1fc3f8, 0x7f00fe00, 0x3f8000, 
0x3f80, 0x3f81fc, 0x3f81fc00, 0x7f0000, 
0x1fff, 0xffff00ff, 0xffffffff, 0xffff0000, 
0xfff, 0xfffe007f, 0xffffffff, 0xfffe0000, 
0x7ff, 0xfffc003f, 0xffffffff, 0xfffc0000, 
0x3ff, 0xfff0000f, 0xffffffff, 0xfff80000, 
0xff, 0xffc00003, 0xffffffff, 0xffe00000, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0, 
0x0, 0x0, 0x0, 0x0
};



static unsigned int _dummy_mask[] = {0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff};

static MONO_SPR _font_spr_big   = { 24, 21, _bmp_nums_speed, _dummy_mask, 1,0};
static MONO_SPR _font_spr_small = { 10, 9, _bmp_nums_distance, _dummy_mask, 1,0};

static MONO_SPR _km_spr =  { 15, 7, _bmp_km, _dummy_mask, 1,0};
static MONO_SPR _mi_spr =  { 21, 10, _bmp_mi, _dummy_mask, 1,0};
static MONO_SPR _kmh_spr =  { 23, 7, _bmp_kmh, _dummy_mask, 1,0};
static MONO_SPR _mph_spr =  { 21, 10, _bmp_mph, _dummy_mask, 1,0};
static MONO_SPR _lock_spr =  { 30,25, _bmp_lock, _dummy_mask, 1,0};
static MONO_SPR _warning_spr =  { 24,19, _bmp_warning, _dummy_mask, 1,0};
static MONO_SPR _fatal_error_spr =  { 20,17, _bmp_fatal_error, _dummy_mask, 1,0};
static MONO_SPR _cruisin_spr =  { 24,19, _bmp_cruisin, _dummy_mask, 1,0};
static MONO_SPR _speed_adjust_spr = { 94, 14, _bmp_speed_adjust, _dummy_mask, 3,0};

static MONO_SPR _battery_full  = { 27, 59, _bmp_battery, _dummy_mask, 1,0};
static MONO_SPR _battery_empty = { 27, 59, _bmp_battery_empty, _dummy_mask, 1,0};
static MONO_SPR _adjust_full_spr  = { 50, 18, _bmp_adjust_bar_full, _dummy_mask, 2, 0};
static MONO_SPR _adjust_empty_spr = { 50, 18, _bmp_adjust_bar_empty, _dummy_mask, 2, 0};

/*
static const unsigned int _bmp_xkuty_pic [] = 
{
0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 
0xffff8000, 0xffffffff, 0xffffffff, 0xffffffff, 
0xffffffff, 0xffff8000, 0xf9ffffff, 0xffffffff, 
0xffffffff, 0xffffffff, 0xffff8000, 0xf17fffff, 
0xffffffff, 0xffffffff, 0xffffffff, 0xffff8000, 
0xf00e7fff, 0xe03fffff, 0xffffffff, 0xffffffff, 
0xffff8000, 0xf0401fff, 0xe01fffff, 0xffffffff, 
0xffffffff, 0xffff8000, 0xe0000fff, 0xe3cfffff, 
0xffffffff, 0xffffffff, 0xffff8000, 0xe3fa01ff, 
0xf1e7ffff, 0xffffffff, 0xffffffff, 0xffff8000, 
0xf01f001f, 0xf8f3fffc, 0x3fcfffff, 0xffffffff, 
0xffff8000, 0xff8007c3, 0xfce1ffe0, 0x1e07ffff, 
0xffffffff, 0xffff8000, 0xfc380078, 0xfe51ffe1, 
0x17ffff, 0xffffffff, 0xffff8000, 0xe0139f06, 
0x7901e002, 0xc077ffff, 0xffffffff, 0xffff8000, 
0xc0020ff3, 0x80030704, 0xc007ffff, 0xffffffff, 
0xffff8000, 0xc00603f9, 0xe0302001, 0x8007ffff, 
0xffffffff, 0xffff8000, 0xffc0e0fc, 0x39f08c39, 
0x1fffffff, 0xffffffff, 0xffff8000, 0xfffff870, 
0x180003f, 0x1fffffff, 0xffffffff, 0xffff8000, 
0xfffffc20, 0x83800038, 0xfc000ff, 0xffffffff, 
0xffff8000, 0xffffff03, 0x83ff01, 0xf8f007f, 
0xffffffff, 0xffff8000, 0xffffff04, 0x1833ffff, 
0xfe2ffe3f, 0xffffffff, 0xffff8000, 0xffffffa4, 
0x4027ffff, 0xfc6fff3f, 0xffffffff, 0xffff8000, 
0xffffffc2, 0xc000ffff, 0xf9ee001f, 0xffffffff, 
0xffff8000, 0xffffffc0, 0x11073fff, 0xf3e4301f, 
0xffffffff, 0xffff8000, 0xffffffc0, 0x11fe3fff, 
0xe7e0005f, 0xffffffff, 0xffff8000, 0xffffffc3, 
0xb1fe3fff, 0x8fe0005f, 0xffffffff, 0xffff8000, 
0xffffffc4, 0x4ffe3fff, 0x1ff1c11f, 0xffffffff, 
0xffff8000, 0xffffffc1, 0xe3ff9ffe, 0x7fc3fe1f, 
0xffffffff, 0xffff8000, 0xffffffc7, 0xa3fc47fc, 
0xff9ffb3f, 0xffffffff, 0xffff8000, 0xffffff8f, 
0xa3fc77f9, 0xff7fff3f, 0xffffffff, 0xffff8000, 
0xffffffbf, 0xaffff3f3, 0xfffffe7f, 0xffffffff, 
0xffff8000, 0xffffff3f, 0xdffff9c7, 0xfffffcff, 
0xffffffff, 0xffff8000, 0xffffff7f, 0x5ffffd8f, 
0xf7fff9ff, 0xffffffff, 0xffff8000, 0xffffff7f, 
0x5ffffc3f, 0xebfff3ff, 0xffffffff, 0xffff8000, 
0xfffffe7f, 0x5ffffc7f, 0xdfc7e7ff, 0xffffffff, 
0xffff8000, 0xfffffe7f, 0x5ffffdff, 0x7801cfff, 
0xffffffff, 0xffff8000, 0xfffffe7f, 0x5ffffffe, 
0x70f88fff, 0xffffffff, 0xffff8000, 0xfffffe7f, 
0x5ffffbfe, 0x73fe5fff, 0xffffffff, 0xffff8000, 
0xffffff7f, 0x5ffffffc, 0x73fe5fff, 0xffffffff, 
0xffff8000, 0xffffff7f, 0x5ffffff9, 0x3800cfff, 
0xffffffff, 0xffff8000, 0xffffff7f, 0x5ffffffb, 
0xbfffcfff, 0xffffffff, 0xffff8000, 0xffffff7f, 
0x4ffff7e3, 0xbfffefff, 0xffffffff, 0xffff8000, 
0xffffff3f, 0x43ff0bc7, 0x9fffe7ff, 0xffffffff, 
0xffff8000, 0xffffff3f, 0x43ff0f8f, 0xdfffe7ff, 
0xffffffff, 0xffff8000, 0xffffffbf, 0x4fff1f8f, 
0xcfffe7ff, 0xffffffff, 0xffff8000, 0xffffffbf, 
0x4fffff0f, 0xf3ffefff, 0xffffffff, 0xffff8000, 
0xffffffbf, 0x4ffffe27, 0xf9ffcfff, 0xffffffff, 
0xffff8000, 0xffffffbf, 0x4ffffe37, 0xfcffdfff, 
0xffffffff, 0xffff8000, 0xffffff9f, 0x4ffffc37, 
0xfeffcfff, 0xffffffff, 0xffff8000, 0xffffffdf, 
0x6ffff873, 0xfeffefff, 0xffffffff, 0xffff8000, 
0xffffffdf, 0x6ffff5f9, 0xfeffe7ff, 0xffffffff, 
0xffff8000, 0xffffffdf, 0x6ffff000, 0xfefff7ff, 
0xffffffff, 0xffff8000, 0xffffffdf, 0x6ffff000, 
0xfefff7ff, 0xffffffff, 0xffff8000, 0xffffffdf, 
0x6fffff7f, 0xfefff3ff, 0xffffffff, 0xffff8000, 
0xffffff9f, 0x6fffff7f, 0xfefffbff, 0xffffffff, 
0xffff8000, 0xffffff8f, 0x6fffff7f, 0xfefffbff, 
0xffffffff, 0xffff8000, 0xffffff8f, 0x6fffff7f, 
0xfefffbff, 0xffffffff, 0xffff8000, 0xffffff8f, 
0x6fffff7f, 0xfefffbff, 0xffffffff, 0xffff8000, 
0xffffff8f, 0x6fffff7f, 0xfdfffbff, 0xffffffff, 
0xffff8000, 0xffffff87, 0x6fffff7f, 0xfdfffbff, 
0xfff8001f, 0xffff8000, 0xffffffa7, 0xafffff7f, 
0xfdfffbff, 0xffc0011f, 0xffff8000, 0xffffffa7, 
0xafffff7f, 0xf9fff3ff, 0xfe00083f, 0xffff8000, 
0xffffff27, 0xafffff7f, 0xfbfff3ff, 0xf00ffbff, 
0xffff8000, 0xffffff37, 0xafffff7f, 0xfbfff3ff, 
0xe0f803ff, 0xffff8000, 0xffffff37, 0xa7ffff7f, 
0xfbfff3ff, 0x83e003ff, 0xffff8000, 0xffffff33, 
0xa7ffff7f, 0xfbfff7fe, 0xfe07fff, 0xffff8000, 
0xffffff33, 0xb7ffff7f, 0xf3fff7fc, 0x3ffc0fff, 
0xffff8000, 0xffffff73, 0xb7ffff7f, 0xf7fff7f8, 
0x7fffc3ff, 0xffff8000, 0xfffffe03, 0xb7ffff7f, 
0xf7fff7f1, 0xfffff0ff, 0xffff8000, 0xfffff803, 
0xb7ffff7f, 0xe7fff7e3, 0xfffffc7f, 0xffff8000, 
0xfffff043, 0xb7ffff3f, 0xe7fff7c7, 0xfffffe3f, 
0xffff8000, 0xffffe241, 0xb7ffff3f, 0xeffff78f, 
0xffffff8f, 0xffff8000, 0xffffc641, 0xf7ffff3f, 
0xeffff71f, 0xffffffc7, 0xffff8000, 0xffffce01, 
0xd7ffff3f, 0xeffff63f, 0xffffffe3, 0xffff8000, 
0xffff9e85, 0xd3ffff3f, 0xcffff47f, 0xfffffff1, 
0xffff8000, 0xffff3885, 0xdbffffbf, 0xdffff0ff, 
0xf00ffff9, 0xffff8000, 0xffff3080, 0xdbffffbf, 
0xdffff1ff, 0x83c1fffc, 0xffff8000, 0xfffe6080, 
0xdbffffbf, 0xdffff9ff, 0x18087ffe, 0x7fff8000, 
0xfffe6080, 0xdbffffbf, 0x9ffffbfe, 0x2063ffe, 
0x3fff8000, 0xfffe40a8, 0xdbffffbf, 0x9ffff3fc, 
0xd81f1fff, 0x3fff8000, 0xfffcd008, 0xdbffffbf, 
0xbffff3f9, 0xf31fcfff, 0x9fff8000, 0xfffc8012, 
0xdbffffbf, 0x3fffe7f2, 0xc71f67ff, 0x8fff8000, 
0xfffc8a5a, 0xfbffffbf, 0x3fffe7e7, 0xab1fe3ff, 
0xcfff8000, 0xfff98a1e, 0xefffffbf, 0x3fffefe2, 
0x53fff1ff, 0xe7ff8000, 0xfff9920e, 0xedffffbf, 
0x7f8fcfc2, 0xa5ffe1ff, 0xe7ff8000, 0xfff91212, 
0xedffffbf, 0x7f024fc6, 0xc007f4ff, 0xf3ff8000, 
0xfff90002, 0xedfffe3e, 0x7e004f89, 0x1771f47f, 
0xf3ff8000, 0xfff90212, 0xec7ffe7e, 0x7c701f8a, 
0x2fe4767f, 0xf9ff8000, 0xfffb2212, 0xec7ffe7e, 
0xfcfe1f9b, 0x3ffb3b3f, 0xf9ff8000, 0xfffb0202, 
0xecffff7e, 0xfce61f1c, 0x7ffb1b3f, 0xfdff8000, 
0xfffa0206, 0xedffff7c, 0x4e21f7c, 0x7ff8899f, 
0xfcff8000, 0xfffa0502, 0xfeffff7c, 0x623f78, 
0xfffb091f, 0xfcff8000, 0xfffa0501, 0xfefffffc, 
0x82723e62, 0x7ffed4f, 0xfe7f8000, 0xfff20c13, 
0xf6fffef8, 0x4f03e60, 0xffa78f, 0xfe7f8000, 
0xfff20c11, 0xf7fffef8, 0xfcf83ec1, 0xf07ee24f, 
0xfe7f8000, 0xfff20c19, 0xfffffff8, 0xfef81cc7, 
0xf83f1a47, 0xff3f8000, 0xfffa0479, 0xfffffff8, 
0xfef81ccf, 0xfc3f6b67, 0xff3f8000, 0xfffa0079, 
0xfffffff8, 0xfe780d8f, 0x9c3f8967, 0xff3f8000, 
0xfffa0078, 0xfff07ff8, 0xfcf80d8f, 0x1c0fb973, 
0xffbf8000, 0xfffa0078, 0xfffffff8, 0xf80506, 
0x1d07c773, 0xffbf8000, 0xfffb0220, 0x7ffffff9, 
0xcff80446, 0x1c9bc733, 0xff9f8000, 0xfffb0002, 
0xc60003f1, 0x83f80400, 0x3e1bdbb3, 0xff9f8000, 
0xfff9400c, 0xc3fffff0, 0x80000, 0x7e4debb9, 
0xff9f8000, 0xfff90409, 0xc3fffff0, 0xc0b0, 
0x330defb9, 0xffcf8000, 0xfff8200b, 0x43fffff5, 
0xfc000030, 0x3326efd9, 0xffcf8000, 0xfff82417, 
0xc9ffffe1, 0xffff0030, 0x3f26edd9, 0xffcf8000, 
0xfff93207, 0xdcffffe3, 0xfffffff2, 0x1ff37159, 
0xffcf8000, 0xfffd8027, 0x9c7fffe3, 0xffffffff, 
0x1e7371d9, 0xffcf8000, 0xfffc805f, 0x9e3fffd7, 
0xfffffff8, 0x8e7371d9, 0xffcf8000, 0xfffcd9ff, 
0x9f3fffa7, 0xfffffff0, 0xff1f1d9, 0xffef8000, 
0xfffec9ff, 0x9f3fff8f, 0xfffffff1, 0xff9f7fc, 
0xffef8000, 0xfffe4cff, 0x3f7fff1f, 0xfffffff5, 
0xff8f7ec, 0xffef8000, 0xfffe60fe, 0x3e7fffff, 
0xfffffff0, 0x8ff9b7ec, 0xffef8000, 0xfffe603e, 
0x3e7fffff, 0xfffffff0, 0xff9b7ec, 0xffe78000, 
0xffff313e, 0x7e7fffff, 0xfffffffe, 0xff1f7ec, 
0xffe78000, 0xffff3100, 0x7cffffff, 0xffffffff, 
0x1ff3f7ec, 0xffe78000, 0xfffc1800, 0xfcffffff, 
0xffffc000, 0x1933f7ec, 0xffe78000, 0xfffc1c49, 
0xf9ffffff, 0xffff8001, 0x3003f7dc, 0xffe78000, 
0xfffc0e03, 0xf9ffffff, 0xffff9e71, 0x1023f1dc, 
0xffe78000, 0xfff80fff, 0xf3ffffff, 0xffff9e60, 
0x1fe3f1fc, 0xffe78000, 0xfffc07ff, 0xe3ffffff, 
0xffffdee0, 0x9fc7ef7c, 0xffef8000, 0xfffe03ff, 
0xc7ffffff, 0xffffce28, 0x4607ef7d, 0xffef8000, 
0xffff80ff, 0x8fffffff, 0xffffce28, 0x8fefed, 
0xffef8000, 0xffffe03e, 0x1fffffff, 0xffffce3c, 
0x11fe3bd, 0xffef8000, 0xfffff800, 0x7fffffff, 
0xffffcf7c, 0x3e3fc279, 0xffcf8000, 0xffffffc1, 
0xffffffff, 0xffffe71f, 0x7fdaf9, 0xffcf8000, 
0xffffffff, 0xffffffff, 0xffffe41f, 0xc1ffc6e9, 
0xffcf8000, 0xffffffff, 0xffffffff, 0xffffe4be, 
0xffffb579, 0xffcf8000, 0xffffffff, 0xffffffff, 
0xfffff30f, 0xffff09fb, 0xffcf8000, 0xffffffff, 
0xffffffff, 0xfffff21f, 0x7fff6bf3, 0xffdf8000, 
0xffffffff, 0xffffffff, 0xfffff24f, 0x7ffe99f3, 
0xff9f8000, 0xffffffff, 0xffffffff, 0xfffff047, 
0xbffc39f3, 0xff9f8000, 0xffffffff, 0xffffffff, 
0xfffff9e3, 0x9df223e7, 0xff9f8000, 0xffffffff, 
0xffffffff, 0xfffff9e7, 0xdbfacfe7, 0xffbf8000, 
0xffffffff, 0xffffffff, 0xfffffcf1, 0xebf99fcf, 
0xff3f8000, 0xffffffff, 0xffffffff, 0xfffffcf3, 
0xe3d83fcf, 0xff3f8000, 0xffffffff, 0xffffffff, 
0xfffffe78, 0xf413ff8f, 0xff3f8000, 0xffffffff, 
0xffffffff, 0xfffffe7c, 0xfbf7ff9f, 0xfe7f8000, 
0xffffffff, 0xffffffff, 0xffffff30, 0x7f9bff1f, 
0xfe7f8000, 0xffffffff, 0xffffffff, 0xffffff34, 
0x7c79ff3f, 0xfeff8000, 0xffffffff, 0xffffffff, 
0xffffff9a, 0x3fccfe7f, 0xfcff8000, 0xffffffff, 
0xffffffff, 0xffffff8c, 0x9f36747f, 0xfcff8000, 
0xffffffff, 0xffffffff, 0xffffffcd, 0xceaf38ff, 
0xf9ff8000, 0xffffffff, 0xffffffff, 0xffffffe7, 
0xe26ff1ff, 0xf9ff8000, 0xffffffff, 0xffffffff, 
0xffffffe7, 0xf0ffe3ff, 0xf3ff8000, 0xffffffff, 
0xffffffff, 0xfffffff3, 0xfc3f07ff, 0xe3ff8000, 
0xffffffff, 0xffffffff, 0xfffffff1, 0xfe001fff, 
0xe7ff8000, 0xffffffff, 0xffffffff, 0xfffffff0, 
0xffe1ffff, 0xcfff8000, 0xffffffff, 0xffffffff, 
0xfffffff0, 0x7fffffff, 0x8fff8000, 0xffffffff, 
0xffffffff, 0xfffffff0, 0x3fffffff, 0x1fff8000, 
0xffffffff, 0xffffffff, 0xfffffffc, 0x1ffffffe, 
0x3fff8000, 0xffffffff, 0xffffffff, 0xffffffff, 
0xffffffc, 0x7fff8000, 0xffffffff, 0xffffffff, 
0xffffffff, 0xc7fffff8, 0xffff8000, 0xffffffff, 
0xffffffff, 0xffffffff, 0xe1fffff1, 0xffff8000, 
0xffffffff, 0xffffffff, 0xffffffff, 0xf87fffc1, 
0xffff8000, 0xffffffff, 0xffffffff, 0xffffffff, 
0xfe0fff09, 0xffff8000, 0xffffffff, 0xffffffff, 
0xffffffff, 0xff81f83f, 0xffff8000, 0xffffffff, 
0xffffffff, 0xffffffff, 0xfff000ff, 0xffff8000, 
0xffffffff, 0xffffffff, 0xffffffff, 0xfffc003f, 
0xffff8000, 0xffffffff, 0xffffffff, 0xffffffff, 
0xffff800f, 0xffff8000, 0xffffffff, 0xffffffff, 
0xffffffff, 0xfffff007, 0xffff8000, 0xffffffff, 
0xffffffff, 0xffffffff, 0xffffffff, 0xffff8000
};

static MONO_SPR _xkuty_pic_spr = { 145, 160, _bmp_xkuty_pic, _dummy_mask, 5,0};
*/

#endif // XCUTY_GFX_H



